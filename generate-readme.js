// Generates the sploits section of the README.md

let fs = require('fs');

let sploits = require('./sploits.json');
let lines = [];
let links = [];
sploits.forEach(function (sploit, i) {
  lines.push(`## ${sploit.usability}\n`);
  lines.push(`| Box | Disc | Details |`);
  lines.push(`| --- | ---- | ------- |`);
  sploit.titles.forEach(function (title, k) {
    let hack = "";
    if (title.hack) {
      hack = `<em>"${title.hack}"</em><br> `;
    }
    lines.push(`| ![][box-${i}-${k}] | ![][disc-${i}-${k}] | ${hack}**${title.title}** <br><br>Github: [${title.source.name}][source-${i}-${k}] <br>**Download**: [${title.download.replace(/https:\/\//, '')}][download-${i}-${k}]  <br>**Instructions**: [${title.readme.name}][readme-${i}-${k}] <br>Demo: [${title.demo.name}][demo-${i}-${k}] <br><br>Notes: ${title.notes.join('<br>') || 'N/A'} <br><br>Purchase: [Amazon](${title.amazon}) \\| [eBay](${title.ebay}) (${title.price}) |`);
    links.push(`[box-${i}-${k}]: ${title.case} "Box Art"`);
    links.push(`[disc-${i}-${k}]: ${title.disc} "Disc Art"`);
    links.push(`[source-${i}-${k}]: ${title.source.link} "Source Code"`);
    links.push(`[download-${i}-${k}]: ${title.download} "Download"`);
    links.push(`[readme-${i}-${k}]: ${title.readme.link} "Instructions"`);
    links.push(`[demo-${i}-${k}]: ${title.demo.link} "YouTube Demo"`);
  });
  lines.push('');
});

let body = lines.join('\n') + '\n\n' + links.join('\n');
fs.writeFileSync('./README.sploits.md', body, 'utf8');
